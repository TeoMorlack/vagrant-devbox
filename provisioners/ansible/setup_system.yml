---
- name: Run apt-get update && apt-get dist-upgrade
  ansible.builtin.apt:
    update_cache: yes
    upgrade: dist
    autoremove: true
  become: true

- name: Unset dash as /bin/sh
  ansible.builtin.debconf:
    name: dash
    question: dash/sh
    value: false
    vtype: boolean
  register: reconfigure_changed
  become: true

- name: Make debconf changes active
  ansible.builtin.command:
    cmd: "dpkg-reconfigure dash"
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: reconfigure_changed.changed
  become: true

- name: Install base apt modules for docker
  become: true
  ansible.builtin.apt:
    pkg:
      - ca-certificates
      - curl
      - gnupg
    state: present
    update_cache: true

- name: Add Docker GPG apt Key
  become: true
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  become: true
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Install docker modules
  become: true
  ansible.builtin.apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true

#sudo groupadd docker
- name: Create "docker" group
  ansible.builtin.group:
    name: docker
    state: present
  become: true

- name: get running ansible user
  ansible.builtin.set_fact:
    local_ansible_user: "{{ lookup('env', 'USER') }}"

#sudo usermod -aG docker root
- name: Add remote user to "docker" group
  become: true
  ansible.builtin.user:
    name: "{{ local_ansible_user }}"
    groups: "docker"
    append: yes